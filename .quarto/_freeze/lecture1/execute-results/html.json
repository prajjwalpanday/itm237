{
  "hash": "95b9e5439231c9326879745d493f8c66",
  "result": {
    "markdown": "---\ntitle: \"Lecture 1\"\n---\n\n### Materials:\n\n-   [Slides](/slides/slide_1.qmd)\n-   [Code worksheet](/notebooks/code_1.ipynb)\n\n#### What is Python?\n\nA general-purpose programming language by Guido van Rossum <br> Intuitive and minimal coding <br> Interpreted not compiled <br> Dynamically typed, no type declarations, data type is tracked at runtime <br> Automatic memory management <br> Spacing defines blocks of code such as control structures and blocks <br>\n\n#### Why Python?\n\n-   Advantages\n-   Ease of programming\n-   Minimal time to develop and maintain codes\n-   Modular and object-oriented\n-   Large standard and user-contributed libraries\n-   Large user community\n\n### Running Code in the Interactive Shell or Line\n\nPython is an interpreted language and you can run simple Python expressions and statements in the interactive programming environment called the shell. In Jupyter Notebook, we will run these in a 'cell'.\n\n### Print Function\n\nWe can also force the output of a value by using the **print** function. The simples for would look like this.\n\n    print(<expression>)\n\nYou can also write a **print** function that includes two or more expressions separated by commas.\n\n    print(<expression>, ..., <expression>)\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\n#statements are interpreted one by one\nprint (\"Hello World\")\nprint (\"something else\")\nprint (\"2+2\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nHello World\nsomething else\n2+2\n```\n:::\n:::\n\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\n#Here are some escape sequences\na = \"Hello\\aFUGU\\aSHRIMP\"\nb = 'Hello\\tFUGU\\nSHRIMP' #single quotes work as well \nprint (a,b)\n\n#why do you think the output is like this?\n#try taking the escape sequences to find out\n\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nHello\u0007FUGU\u0007SHRIMP Hello\tFUGU\nSHRIMP\n```\n:::\n:::\n\n\n",
    "supporting": [
      "lecture1_files"
    ],
    "filters": [],
    "includes": {}
  }
}